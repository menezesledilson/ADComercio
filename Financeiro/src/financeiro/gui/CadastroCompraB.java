/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package financeiro.gui;

import financeiro.DAO.BobinaDao;
import financeiro.DAO.CompraBDao;
import financeiro.conexao.Conexao;
import financeiro.model.CompraBobina;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ledilson
 */
public class CadastroCompraB extends javax.swing.JFrame {

    /**
     * Creates new form Pedido
     */
    public CadastroCompraB() {
        initComponents();
        carregaTabela();
        cbListCompraB();
        txtValorCompraB.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtQuant = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtValorPesoCompraB = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextFieldTotalCarga = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtValorCompraB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCompraB = new javax.swing.JTable();
        cbxCompraB = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtQuant, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 60, -1));

        jLabel1.setText("Valor automatico");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        jLabel2.setText("Quantidade");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        txtValorPesoCompraB.setText(" ");
        jPanel1.add(txtValorPesoCompraB, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 70, -1));

        jLabel3.setText("Peso digitado pelo usuario");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, -1, -1));

        jLabel4.setText("Valor unitario  *  Peso = totalCArga");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, -1, 30));

        jButton2.setText("Emitir NF ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 120, -1));
        jPanel1.add(jTextFieldTotalCarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 70, -1));

        jLabel6.setText("Exbir total da carga");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, -1));
        jPanel1.add(txtValorCompraB, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 80, -1));

        jLabel7.setText("Produto");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        tbCompraB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Título 5", "Título 6", "Título 7", "Título 8"
            }
        ));
        jScrollPane1.setViewportView(tbCompraB);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 690, 200));

        cbxCompraB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione" }));
        cbxCompraB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCompraBActionPerformed(evt);
            }
        });
        jPanel1.add(cbxCompraB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 190, -1));

        jButton3.setText("Limpar CAmpos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 170, 50));

        jTextField2.setText("jTextField2");
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private double totalAcumulado = 0.0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CompraBobina y = new CompraBobina();
        CompraBDao dao = new CompraBDao();

        try {
            // Adição da quantidade
            y.setQuantPedido(Integer.parseInt(txtQuant.getText()));

            // Adição do Produto
            if (cbxCompraB.getItemCount() > 0) {
                String descricaoSelecionada = cbxCompraB.getSelectedItem().toString();
                y.setDescricaoPedido(descricaoSelecionada);
                y.setValorUnitarioPedido(Double.parseDouble(txtValorCompraB.getText()));
                y.setPesoPapelPedido(Double.parseDouble(txtValorPesoCompraB.getText()));

                // Cálculo do valor total
                double valorTotalPedido = y.getValorUnitarioPedido() * y.getPesoPapelPedido();
                y.setTotalGeralPedido(valorTotalPedido);

// Acumula o valor total
                totalAcumulado += valorTotalPedido;

                //y.setTotalFinalBo(Double.parseDouble(jTextFieldTotalCarga.getText()));
                // Formata o valor para exibir apenas duas casas decimais
                DecimalFormat df = new DecimalFormat("#.##");
                String valorFormatado = df.format(totalAcumulado);

                // Atualiza a soma no JFrame CadastroCompraB
                jTextFieldTotalCarga.setText(String.valueOf(valorFormatado));

                dao.adcionar(y);
                carregaTabela();

                // Atualiza a soma no JFrame CadastroCompraB
                // Pergunta ao usuário se deseja adicionar mais um pedido
                int opcao = JOptionPane.showConfirmDialog(this, "Pedido adicionado com sucesso. Deseja adicionar mais um pedido?", "Confirmação", JOptionPane.YES_NO_OPTION);
                if (opcao == JOptionPane.YES_OPTION) {
                    // O usuário escolheu adicionar mais um pedido, limpe os campos ou faça outras ações necessárias
                    limparCampos();
                } else {
                    // O usuário escolheu não adicionar mais um pedido, mantenha os campos preenchidos
                    // ou faça outras ações necessárias
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum item disponível na lista de produtos.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira valores válidos para quantidade, valor e peso.", "Erro", JOptionPane.ERROR_MESSAGE);
            // Ou logue a exceção para análise posterior
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed
    public void limparCampos() {
        txtQuant.setText("");
        txtValorPesoCompraB.setText("");
    }

    //Comunicação com cbxBobina Adcionar
    ArrayList<Integer> idbobinaCompraB = new ArrayList<Integer>();
    ArrayList<Double> valoresCompraB = new ArrayList<Double>();

    public void cbListCompraB() {
        // Limpar os dados antigos
        idbobinaCompraB.clear();
        valoresCompraB.clear();
        cbxCompraB.removeAllItems();

        try {
            BobinaDao dao = new BobinaDao();
            Connection con = Conexao.getConnection();
            PreparedStatement pstm;
            ResultSet rs;

            pstm = con.prepareStatement("SELECT * FROM bobina ORDER BY nomeBobina ASC;");
            rs = pstm.executeQuery();

            while (rs.next()) {
                idbobinaCompraB.add(rs.getInt(1));
                cbxCompraB.addItem(rs.getString(2));
                valoresCompraB.add(rs.getDouble(3));
            }
            // Defina o modelo do JComboBox
                     
        } catch (SQLException ErroSql) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados: " + ErroSql, "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cbxCompraBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCompraBActionPerformed
        // Não use getStateChange() para eventos de ação, pois é específico de eventos de item
        int selectedIndex = cbxCompraB.getSelectedIndex();
        if (selectedIndex >= 0 && selectedIndex < valoresCompraB.size()) {
            double valorSelecionado = valoresCompraB.get(selectedIndex);
            txtValorCompraB.setText(String.valueOf(valorSelecionado));
        } else {
            // Adicione logs ou mensagens para identificar quando este bloco é executado
            System.out.println("Índice selecionado fora dos limites ou valoresCompraB está vazio.");
        }

    }//GEN-LAST:event_cbxCompraBActionPerformed


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextFieldTotalCarga.setText("");
        jTextFieldTotalCarga.setText("");
        txtValorCompraB.setText("");
        txtValorPesoCompraB.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    private void carregaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) tbCompraB.getModel();
        modelo.setNumRows(0);

        CompraBDao dao = new CompraBDao();

        try {
            Connection con = Conexao.getConnection();
            PreparedStatement pstm;
            ResultSet rs;

            pstm = con.prepareStatement("SELECT id, datapedido, quantidade, descricao, valorunitario, pesopapel, totalpedido,acumulo FROM pedidocomprabobina ORDER BY datapedido ASC;");

            rs = pstm.executeQuery();

            DecimalFormat df = new DecimalFormat("#.##");

            while (rs.next()) {
                /* double valorUnitario = rs.getDouble("valorunitario");
                 double pesoPapel = rs.getDouble("pesopapel");
                 double totalPedido = valorUnitario * pesoPapel;*/

                modelo.addRow(new Object[]{
                    rs.getString("id"),
                    rs.getString("datapedido"),
                    rs.getString("quantidade"),
                    rs.getString("descricao"),
                    rs.getString("valorunitario"),
                    rs.getString("pesopapel"), // df.format(totalPedido) // Adiciona o totalPedido formatado à tabela
                    rs.getString("totalpedido"),
                    rs.getString("acumulo")
                });

            }

            Conexao.closeConnection(con, pstm, rs);

        } catch (Exception ErroSql) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar a tabela de dados: " + ErroSql, "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }
    /*

     private double calcularTotalCarga(DefaultTableModel modelo) {
     double totalCarga = 0.0;

     for (int i = 0; i < modelo.getRowCount(); i++) {
     totalCarga += Double.parseDouble((String) modelo.getValueAt(i, 7)); // A coluna 7 contém o Total do Pedido
     }

     return totalCarga;
     }*/

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCompraB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCompraB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCompraB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCompraB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCompraB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxCompraB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldTotalCarga;
    private javax.swing.JTable tbCompraB;
    private javax.swing.JTextField txtQuant;
    private javax.swing.JTextField txtValorCompraB;
    private javax.swing.JTextField txtValorPesoCompraB;
    // End of variables declaration//GEN-END:variables
}
