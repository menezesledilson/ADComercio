/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package financeiro.gui;

import financeiro.model.BobinaC;
import financeiro.DAO.BobinaDao;
import financeiro.conexao.Conexao;
import financeiro.model.BobinaC;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ledilson
 */
public class CadastroBobina extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroBobina
     */
    public CadastroBobina() {
        initComponents();

        CentralizarCampos();
        carregaTabela();
        //desativaBotoes();
        desativaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCadBobinas = new javax.swing.JTable();
        btNovo = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btGravar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();

        setClosable(true);
        setTitle("Cadastro de Bobinas");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Descrição.:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        jLabel2.setText("Preço KG.:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 30));
        jPanel1.add(txtDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 190, 20));
        jPanel1.add(txtValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 50, 70, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 101, 450, 30));

        tbCadBobinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição", "Preço"
            }
        ));
        tbCadBobinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCadBobinasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCadBobinas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, 330));

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jPanel1.add(btNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 80, -1));

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });
        jPanel1.add(btAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 80, -1));

        btGravar.setText("Gravar");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });
        jPanel1.add(btGravar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 80, -1));

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(btExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 80, -1));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 10, 100));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void limparTexto() {
        txtDescricao.setText("");
        txtValor.setText("");
    }

    private void desativaBotoes() {
        btGravar.setEnabled(false);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);

    }

    private void desativaCampos() {
        txtDescricao.setEnabled(false);
        txtValor.setEnabled(false);
    }

    private void ativaBotoes() {
        btGravar.setEnabled(true);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
    }

    private void ativaCampos() {
        txtDescricao.setEnabled(true);
        txtValor.setEnabled(true);
    }

    private void CentralizarCampos() {
        txtDescricao.setHorizontalAlignment(SwingConstants.CENTER);
        txtValor.setHorizontalAlignment(SwingConstants.CENTER);
    }
    private void tbCadBobinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCadBobinasMouseClicked
        // TODO add your handling code here:

        //Setando campos de texto com registros
        BobinaC b = new BobinaC();
        BobinaDao dao = new BobinaDao();

        int index = tbCadBobinas.getSelectedRow();
        b = dao.listarBobinaC().get(index);

        txtDescricao.setText(b.getNomeBobina());
        txtValor.setText(Double.toString(b.getValorBobina()));

        btGravar.setEnabled(false);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
        ativaCampos();

    }//GEN-LAST:event_tbCadBobinasMouseClicked

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        ativaBotoes();

        //  ativaCampos();
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);

        txtDescricao.setEnabled(true);
        txtValor.setEnabled(true);
        limparTexto();
    }//GEN-LAST:event_btNovoActionPerformed
    private void carregaTabela() {

        DefaultTableModel modelo = (DefaultTableModel) tbCadBobinas.getModel();
        modelo.setNumRows(0);

        //Defini o tamanho da tabela
        tbCadBobinas.getColumnModel().getColumn(0).setPreferredWidth(350);
        tbCadBobinas.getColumnModel().getColumn(1).setPreferredWidth(20);

        try (Connection con = Conexao.getConnection();
                PreparedStatement pstm = con.prepareStatement("SELECT nomebobina, valorbobina FROM bobina ORDER BY nomebobina ASC;");
                ResultSet rs = pstm.executeQuery()) {

            NumberFormat currencyPreco = NumberFormat.getCurrencyInstance();

            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("nomebobina"),
                    //rs.getString(3),
                    currencyPreco.format(rs.getDouble("valorbobina"))
                });
            }
            Conexao.closeConnection(con, pstm, rs);

        } catch (Exception ErroSql) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar a tabela de dados: " + ErroSql, "ERRO", JOptionPane.ERROR);
        }
    }

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed

        //Objetos
        BobinaC b = new BobinaC();
        BobinaDao dao = new BobinaDao();

        int index = tbCadBobinas.getSelectedRow(); // retorna o numero da linha selecionada
        b = dao.listarBobinaC().get(index);

        switch (JOptionPane.showConfirmDialog(null, " [--ALTERAÇÃO DE PRODUTO--] \n Produto Atual: "
                + b.getNomeBobina()
                + "\n R$: " + b.getValorBobina() + "0 "
                + "\n Será alterado para \n Novo Produto: " + txtDescricao.getText()
                + "\n R$: " + txtValor.getText() + "0 "
                + "\n Deseja realmente fazer alteração? ",
                " Alteração de dados. ", JOptionPane.YES_NO_OPTION)) {

            case 0:

                b.setNomeBobina(txtDescricao.getText()); // seta as novas informações para objeto selecionado
                b.setValorBobina(Double.parseDouble(txtValor.getText()));

                dao.alterar(b);// faz alteração no banco de dados
                carregaTabela();
                //  limparTexto();
                desativaBotoes();
                desativaCampos();
                break;

            case 1:
                JOptionPane.showMessageDialog(null, "Nenhuma alteração foi feita.", "AVISO",
                        JOptionPane.INFORMATION_MESSAGE);
                break;
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed

        // Verificar se os campos estão vazios
        if (txtDescricao.getText().isEmpty() || txtValor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos antes de gravar.", "Campos Vazios", JOptionPane.WARNING_MESSAGE);
            return; // Abortar a operação se houver campos vazios
        }

        // Criar uma nova instância de BobinaC
        BobinaC b = new BobinaC();
        BobinaDao dao = new BobinaDao();

        // Atualizar os dados da nova bobina
        b.setNomeBobina(txtDescricao.getText());

        // Obter o valor como uma String do campo de texto
        String valorBobinaText = txtValor.getText();

        // Verificar se a conversão para double é válida
        try {
            // Convertendo a String para double
            double valorBobina = Double.parseDouble(valorBobinaText);

            // Definindo o valor convertido na propriedade
            b.setValorBobina(valorBobina);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valor inválido. Por favor, insira um valor numérico válido.", "Valor Inválido", JOptionPane.WARNING_MESSAGE);
            return; // Abortar a operação se o valor não for válido
        }

        // Adicionar a nova bobina no banco de dados
        dao.adicionar(b);

        // Atualizar a tabela
        carregaTabela();

        // Limpar os campos de texto
        limparTexto();
    }//GEN-LAST:event_btGravarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed

        //Objetos
        BobinaC b = new BobinaC();
        BobinaDao dao = new BobinaDao();

        int index = tbCadBobinas.getSelectedRow(); // retorna o numero da linha selecionada
        b = dao.listarBobinaC().get(index);

        b.setNomeBobina(txtDescricao.getText());
        b.setValorBobina(Double.parseDouble(txtValor.getText()));

        switch (JOptionPane.showConfirmDialog(null, "Deseja excluir o Produto ? \n "
                + "\n Produto:  " + b.getNomeBobina()
                + "\n R$: " + b.getValorBobina(), "Confirmação ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)) {

            case 0:
                dao.remover(b);
                carregaTabela();
                limparTexto();
                desativaBotoes();
                break;
            case 1:
                JOptionPane.showMessageDialog(null, "Nehuma exclusão foi feita.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                break;
        }

    }//GEN-LAST:event_btExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable tbCadBobinas;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
