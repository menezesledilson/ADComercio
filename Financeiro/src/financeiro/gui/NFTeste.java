/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package financeiro.gui;

import financeiro.DAO.BobinaDao;
import financeiro.conexao.Conexao;
import financeiro.model.BobinaC;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ledilson
 */
public class NFTeste extends javax.swing.JFrame {

    /**
     * Creates new form NFTeste
     */
    public NFTeste() {
        initComponents();

        listarNomes();

        /*   //    / Exemplo de inicialização de componentes
         btnBuscar = new JButton("Buscar");

         tbResultado = new JTable();
         txtTermoBusca = new javax.swing.JTextField();
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scrollBusca = new javax.swing.JScrollPane();
        scrollPaneLista = new javax.swing.JScrollPane();
        listNomes = new javax.swing.JList();
        txtNome1 = new javax.swing.JTextField();
        txtvalor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        listNomes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                HanlerNome(evt);
            }
        });
        scrollPaneLista.setViewportView(listNomes);

        scrollBusca.setViewportView(scrollPaneLista);

        txtNome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNome1ActionPerformed(evt);
            }
        });
        txtNome1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNome1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNome1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNome1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNome1KeyReleased
        // TODO add your handling code here:

        listarNomes();
    }//GEN-LAST:event_txtNome1KeyReleased
    private void atualizarValorNoTextField(String nomeBobina) {
        // Sua lógica para buscar e atualizar o valor no banco de dados
        // e em seguida, atualizar o JTextField (txtValor)
        String valor = buscarValorNoBanco(nomeBobina);
        txtvalor.setText(valor);
    }

    private String buscarValorNoBanco(String nomeBobina) {
        // Sua lógica de consulta no banco de dados para obter o valor
        // correspondente ao nomeBobina
        // Retorne o valor obtido
        return "";
    }

    private void HanlerNome(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_HanlerNome
        if (!evt.getValueIsAdjusting()) {
            // Obtém o valor selecionado na lista
            String valorSelecionado = (String) listNomes.getSelectedValue();

            // Atualiza o JTextField com o valor correspondente
            atualizarValorNoTextField(valorSelecionado);
        }
    }//GEN-LAST:event_HanlerNome

    private void txtNome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNome1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNome1ActionPerformed
   private void buscarValorEAtualizar(String nomeBobina) {
    
}
    
    
    
    
    
    
    
    
    
    
    
    
    /*   private void realizarBusca() {
     // Obtém o termo de busca do JTextField
     // String termoBusca = txtTermoBusca.getText().trim();

     // Chama o método do DAO para buscar as bobinas
     BobinaDao dao = new BobinaDao();
     List<BobinaC> bobinasEncontradas = dao.listar(termoBusca);

     // Atualiza a tabela com os resultados da busca
     DefaultTableModel modelo = (DefaultTableModel) tbResultado.getModel();
     modelo.setRowCount(0); // Limpa a tabela antes de adicionar os novos resultados

     for (BobinaC bobina : bobinasEncontradas) {
     modelo.addRow(new Object[]{
     bobina.getId(),
     bobina.getNomeBobina(),
     bobina.getValorBobina()
     // Adicione mais colunas conforme necessário
     });
     }
     }*/

    private void listarNomes() {
        //scrollPaneLista.set
        DefaultListModel<String> modelo = new DefaultListModel<>();
        listNomes.setModel(modelo);
        String readLista = "SELECT * FROM bobina WHERE LOWER(nomebobina) LIKE LOWER(?) ORDER BY nomebobina";

        try {
            Connection con = Conexao.getConnection();
            PreparedStatement pstm = con.prepareStatement(readLista);
            pstm.setString(1, txtNome1.getText() + "%");

            ResultSet rs = pstm.executeQuery();

            while (rs.next()) {

                modelo.addElement(rs.getString(2));

            }
            Conexao.closeConnection(con, pstm, rs);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NFTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NFTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NFTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NFTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NFTeste().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JList listNomes;
    private javax.swing.JScrollPane scrollBusca;
    private javax.swing.JScrollPane scrollPaneLista;
    private javax.swing.JTextField txtNome1;
    private javax.swing.JTextField txtvalor;
    // End of variables declaration//GEN-END:variables
}
