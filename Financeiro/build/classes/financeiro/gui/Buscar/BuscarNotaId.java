/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package financeiro.gui.Buscar;

import financeiro.conexao.Conexao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ledilson
 */
public class BuscarNotaId extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarNotaId
     */
    public BuscarNotaId() {
        initComponents();
        desativarBotao();
        txtId.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bgHabilitar = new javax.swing.JButton();
        bgReimprimir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblTomador = new javax.swing.JLabel();
        bgLocalizar = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);
        setTitle("Emitir  Nota Serviço Indentificador");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bgHabilitar.setText("Habilitar");
        bgHabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgHabilitarActionPerformed(evt);
            }
        });

        bgReimprimir.setText("Reimprimir");
        bgReimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgReimprimirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Digite o Id da Nota");

        txtId.setText(" ");

        lblTomador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTomador.setText("Nome Tomador");
        lblTomador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        bgLocalizar.setText("Localizar");
        bgLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgLocalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bgHabilitar)
                .addGap(67, 67, 67)
                .addComponent(bgLocalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(bgReimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(lblTomador, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bgHabilitar)
                    .addComponent(bgReimprimir)
                    .addComponent(bgLocalizar))
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTomador)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bgHabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgHabilitarActionPerformed
        bgLocalizar.setEnabled(true);
        txtId.setEnabled(true);
        bgReimprimir.setEnabled(false);
        txtId.setText("");
    }//GEN-LAST:event_bgHabilitarActionPerformed
    public void Limpar() {

        txtId.setText("");
    }
    private void bgLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgLocalizarActionPerformed
        Connection con = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;

        try {
            // Obter o ID digitado no campo de texto e remover espaços em branco
            String idText = txtId.getText().trim();
            // Verificar se o campo não está vazio
            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, insira um ID válido.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //Obter o ID digitado no campo de texto
            int idDigitado = Integer.parseInt(idText);

            // Estabelecer a conexão com o banco de dados
            con = Conexao.getConnection();

            // Execute a consulta SQL para obter o ID mais recente
            pstm = con.prepareStatement("SELECT * FROM notaservico where id = ? ");
            pstm.setInt(1, idDigitado);

            // Executar a consulta
            rs = pstm.executeQuery();
            // Verificar se há resultados
            if (rs.next()) {
                // Exibir o nome da empresa no lbTomador
                lblTomador.setText(rs.getString("tomador"));
            } else {
                // Se não houver resultados, exibir uma mensagem informando que o ID não foi encontrado
                JOptionPane.showMessageDialog(null, "ID não encontrado", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao acessar o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Remova ou ajuste conforme necessário
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor, insira um ID válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Remova ou ajuste conforme necessário
        } finally {
            // Fechar os recursos (ResultSet, PreparedStatement e Connection) no bloco finally para garantir a liberação adequada

            try {
                if (rs != null) {
                    rs.close();
                }
                if (pstm != null) {
                    pstm.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException e) {
                // Lidar com erros de fechamento, se necessário
                e.printStackTrace();
            }
        }

        bgHabilitar.setEnabled(false);
        bgReimprimir.setEnabled(true);
        txtId.setEnabled(false);
    }//GEN-LAST:event_bgLocalizarActionPerformed

    private void bgReimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgReimprimirActionPerformed
        Connection con = Conexao.getConnection();
        try {
            String caminhoRelatorio = "C:\\Users\\Ledilson\\Documents\\NetBeansProjects\\Financeiro\\src\\RelatorioNotaServico\\RelatorioNotaServicoId.jasper";

            // Adicione o ID da nota como um parâmetro
            Map<String, Object> parametros = new HashMap<>();

            // Utilize trim() para remover espaços em branco antes e depois do valor
            String notaIdStr = txtId.getText().trim();

            parametros.put("notaId", Integer.valueOf(notaIdStr));

            JasperPrint jasperPrint = JasperFillManager.fillReport(caminhoRelatorio, parametros, con);
            JasperViewer viewer = new JasperViewer(jasperPrint, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            // Exiba a mensagem de erro usando JOptionPane
            JOptionPane.showMessageDialog(this, "Erro: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Certifique-se de fechar a conexão
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }

        }
        bgLocalizar.setEnabled(false);
        txtId.setEnabled(false);
        bgHabilitar.setEnabled(true);
    }//GEN-LAST:event_bgReimprimirActionPerformed
    public void HabilitarBotao() {
        bgLocalizar.setEnabled(true);

    }

    public void desativarBotao() {
        bgLocalizar.setEnabled(false);
        bgReimprimir.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bgHabilitar;
    private javax.swing.JButton bgLocalizar;
    private javax.swing.JButton bgReimprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTomador;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
